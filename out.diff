diff --git a/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/AppModule.kt b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/AppModule.kt
new file mode 100644
index 0000000..d350a0d
--- /dev/null
+++ b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/AppModule.kt
@@ -0,0 +1,4 @@
+package ru.andrewkir.hse_mooc.di
+
+class AppModule {
+}
\ No newline at end of file
diff --git a/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/DataModule.kt b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/DataModule.kt
new file mode 100644
index 0000000..b567c15
--- /dev/null
+++ b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/DataModule.kt
@@ -0,0 +1,4 @@
+package ru.andrewkir.hse_mooc.di
+
+class DataModule {
+}
\ No newline at end of file
diff --git a/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/ViewModelKey.kt b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/ViewModelKey.kt
new file mode 100644
index 0000000..8b56623
--- /dev/null
+++ b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/ViewModelKey.kt
@@ -0,0 +1,4 @@
+package ru.andrewkir.hse_mooc.di
+
+class ViewModelKey {
+}
\ No newline at end of file
diff --git a/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/ViewModelModule.kt b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/ViewModelModule.kt
new file mode 100644
index 0000000..4ce3c34
--- /dev/null
+++ b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/ViewModelModule.kt
@@ -0,0 +1,4 @@
+package ru.andrewkir.hse_mooc.di
+
+class ViewModelModule {
+}
\ No newline at end of file
diff --git a/hse_mooc/app/build.gradle b/hse_mooc/app/build.gradle
index b28bda0..bebb878 100644
--- a/hse_mooc/app/build.gradle
+++ b/hse_mooc/app/build.gradle
@@ -76,5 +76,8 @@ dependencies {
     implementation 'com.squareup.retrofit2:retrofit:2.9.0'
     implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
     implementation("com.squareup.okhttp3:logging-interceptor:4.9.0")
+
+    implementation 'com.google.dagger:dagger:2.43.2'
+    kapt 'com.google.dagger:dagger-compiler:2.43.2'
 }
 
diff --git a/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/common/ViewModelFactory.kt b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/common/ViewModelFactory.kt
index e365811..a6102f6 100644
--- a/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/common/ViewModelFactory.kt
+++ b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/common/ViewModelFactory.kt
@@ -2,29 +2,12 @@ package ru.andrewkir.hse_mooc.common
 
 import androidx.lifecycle.ViewModel
 import androidx.lifecycle.ViewModelProvider
-import ru.andrewkir.hse_mooc.data.repositories.*
-import ru.andrewkir.hse_mooc.domain.repositories.*
-import ru.andrewkir.hse_mooc.flows.auth.login.LoginViewModel
-import ru.andrewkir.hse_mooc.flows.auth.register.RegisterViewModel
-import ru.andrewkir.hse_mooc.flows.course.CourseViewModel
-import ru.andrewkir.hse_mooc.flows.courses.main.CoursesMainViewModel
-import ru.andrewkir.hse_mooc.flows.courses.profile.ProfileViewModel
-import ru.andrewkir.hse_mooc.flows.courses.search.CoursesSearchViewModel
+import javax.inject.Inject
+import javax.inject.Provider
 
-class ViewModelFactory(
-    private val repository: BaseRepository
-) : ViewModelProvider.NewInstanceFactory() {
+class ViewModelFactory @Inject constructor(private val viewModels: MutableMap<Class<out ViewModel>,
+        @JvmSuppressWildcards Provider<ViewModel>>): ViewModelProvider.Factory {
 
-    @Suppress("UNCHECKED_CAST")
-    override fun <T : ViewModel> create(modelClass: Class<T>): T {
-        return when {
-            modelClass.isAssignableFrom(LoginViewModel::class.java) -> LoginViewModel(repository as AuthRepositoryImpl) as T
-            modelClass.isAssignableFrom(RegisterViewModel::class.java) -> RegisterViewModel(repository as AuthRepositoryImpl) as T
-            modelClass.isAssignableFrom(CoursesSearchViewModel::class.java) -> CoursesSearchViewModel(repository as CoursesSearchRepositoryImpl) as T
-            modelClass.isAssignableFrom(CoursesMainViewModel::class.java) -> CoursesMainViewModel(repository as CoursesMainRepositoryImpl) as T
-            modelClass.isAssignableFrom(CourseViewModel::class.java) -> CourseViewModel(repository as CourseRepositoryImpl) as T
-            modelClass.isAssignableFrom(ProfileViewModel::class.java) -> ProfileViewModel(repository as ProfileRepositoryImpl) as T
-            else -> throw IllegalArgumentException("Provide correct viewModel class")
-        }
-    }
+    override fun <T : ViewModel> create(modelClass: Class<T>): T =
+        viewModels[modelClass]?.get() as T
 }
\ No newline at end of file
diff --git a/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/AppModule.kt b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/AppModule.kt
index d350a0d..e032c65 100644
--- a/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/AppModule.kt
+++ b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/AppModule.kt
@@ -1,4 +1,11 @@
 package ru.andrewkir.hse_mooc.di
 
-class AppModule {
+import android.content.Context
+import dagger.Module
+import dagger.Provides
+
+@Module
+class AppModule(val context: Context) {
+    @Provides
+    fun provideContext(): Context = context
 }
\ No newline at end of file
diff --git a/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/DataModule.kt b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/DataModule.kt
index b567c15..0031a9c 100644
--- a/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/DataModule.kt
+++ b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/DataModule.kt
@@ -1,4 +1,34 @@
 package ru.andrewkir.hse_mooc.di
 
+import android.content.Context
+import dagger.Module
+import dagger.Provides
+import ru.andrewkir.hse_mooc.data.network.api.AuthApi
+import ru.andrewkir.hse_mooc.data.repositories.*
+import ru.andrewkir.hse_mooc.domain.network.api.CoursesApi
+import ru.andrewkir.hse_mooc.domain.repositories.*
+
+@Module
 class DataModule {
+
+    @Provides
+    fun provideAuthRepository(authApi: AuthApi): AuthRepository =
+        AuthRepositoryImpl(authApi)
+
+    @Provides
+    fun provideProfileRepository(coursesApi: CoursesApi): ProfileRepository =
+        ProfileRepositoryImpl(coursesApi)
+
+    @Provides
+    fun provideCourseRepository(coursesApi: CoursesApi): CourseRepository =
+        CourseRepositoryImpl(coursesApi)
+
+    @Provides
+    fun provideCoursesMainRepository(coursesApi: CoursesApi): CoursesMainRepository =
+        CoursesMainRepositoryImpl(coursesApi)
+
+    @Provides
+    fun provideCoursesSearchRepository(coursesApi: CoursesApi): CoursesSearchRepository =
+        CoursesSearchRepositoryImpl(coursesApi)
+
 }
\ No newline at end of file
diff --git a/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/ViewModelKey.kt b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/ViewModelKey.kt
index 8b56623..878d1b9 100644
--- a/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/ViewModelKey.kt
+++ b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/ViewModelKey.kt
@@ -1,4 +1,14 @@
 package ru.andrewkir.hse_mooc.di
 
-class ViewModelKey {
-}
\ No newline at end of file
+import androidx.lifecycle.ViewModel
+import dagger.MapKey
+import kotlin.reflect.KClass
+
+@Target(
+    AnnotationTarget.FUNCTION,
+    AnnotationTarget.PROPERTY_GETTER,
+    AnnotationTarget.PROPERTY_SETTER
+)
+@Retention(AnnotationRetention.RUNTIME)
+@MapKey
+annotation class ViewModelKey(val value: KClass<out ViewModel>)
\ No newline at end of file
diff --git a/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/ViewModelModule.kt b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/ViewModelModule.kt
index 4ce3c34..4281c75 100644
--- a/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/ViewModelModule.kt
+++ b/hse_mooc/app/src/main/java/ru/andrewkir/hse_mooc/di/ViewModelModule.kt
@@ -1,4 +1,50 @@
 package ru.andrewkir.hse_mooc.di
 
-class ViewModelModule {
+import androidx.lifecycle.ViewModel
+import androidx.lifecycle.ViewModelProvider
+import dagger.Binds
+import dagger.Module
+import dagger.multibindings.IntoMap
+import ru.andrewkir.hse_mooc.common.ViewModelFactory
+import ru.andrewkir.hse_mooc.flows.auth.login.LoginViewModel
+import ru.andrewkir.hse_mooc.flows.auth.register.RegisterViewModel
+import ru.andrewkir.hse_mooc.flows.course.CourseViewModel
+import ru.andrewkir.hse_mooc.flows.courses.main.CoursesMainViewModel
+import ru.andrewkir.hse_mooc.flows.courses.profile.ProfileViewModel
+import ru.andrewkir.hse_mooc.flows.courses.search.CoursesSearchViewModel
+
+@Module
+abstract class ViewModelModule {
+    @Binds
+    abstract fun bindViewModelFactory(factory: ViewModelFactory): ViewModelProvider.Factory
+
+    @Binds
+    @IntoMap
+    @ViewModelKey(ProfileViewModel::class)
+    abstract fun viewModel(viewModel: ProfileViewModel): ViewModel
+
+    @Binds
+    @IntoMap
+    @ViewModelKey(LoginViewModel::class)
+    abstract fun viewModel(viewModel: LoginViewModel): ViewModel
+
+    @Binds
+    @IntoMap
+    @ViewModelKey(RegisterViewModel::class)
+    abstract fun viewModel(viewModel: RegisterViewModel): ViewModel
+
+    @Binds
+    @IntoMap
+    @ViewModelKey(CourseViewModel::class)
+    abstract fun viewModel(viewModel: CourseViewModel): ViewModel
+
+    @Binds
+    @IntoMap
+    @ViewModelKey(CoursesSearchViewModel::class)
+    abstract fun viewModel(viewModel: CoursesSearchViewModel): ViewModel
+
+    @Binds
+    @IntoMap
+    @ViewModelKey(CoursesMainViewModel::class)
+    abstract fun viewModel(viewModel: CoursesMainViewModel): ViewModel
 }
\ No newline at end of file
